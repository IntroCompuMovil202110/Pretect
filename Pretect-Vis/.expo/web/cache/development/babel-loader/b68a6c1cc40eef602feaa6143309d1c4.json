{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/daniel/Documents/Projects/Pretect/Pretect-Vis/src/screens/SignInScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Text, TextInput, Button } from 'react-native-paper';\nimport firebase from \"../../firebase/fire.js\";\n\nvar SignInScreen = function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      err = _useState6[0],\n      setError = _useState6[1];\n\n  var signInUser = function signInUser() {\n    var response;\n    return _regeneratorRuntime.async(function signInUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.default.auth().signInWithEmailAndPassword(email, password));\n\n          case 3:\n            response = _context.sent;\n            navigation.navigate('App');\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setError(_context.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var logo = require(\"../../assets/logo.jpeg\");\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: logo,\n    style: {\n      width: '40%',\n      height: '20%',\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"BIENVENIDO ADMINISTRADOR\"), React.createElement(TextInput, {\n    label: \"Correo\",\n    mode: \"outlined\",\n    value: email,\n    style: styles.sep,\n    onChangeText: function onChangeText(newEmail) {\n      return setEmail(newEmail);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    mode: \"outlined\",\n    value: password,\n    style: styles.sep,\n    onChangeText: function onChangeText(newPassword) {\n      return setPassword(newPassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    style: styles.sep,\n    onPress: signInUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Ingresar\"));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  title: {\n    marginVertical: 15,\n    fontWeight: '700',\n    fontSize: 32,\n    color: '#434343',\n    textAlign: 'center'\n  }\n});\nexport default SignInScreen;","map":{"version":3,"sources":["/home/daniel/Documents/Projects/Pretect/Pretect-Vis/src/screens/SignInScreen.js"],"names":["React","useState","Text","TextInput","Button","firebase","SignInScreen","navigation","email","setEmail","password","setPassword","err","setError","signInUser","default","auth","signInWithEmailAndPassword","response","navigate","message","logo","require","styles","container","width","height","marginTop","title","sep","newEmail","newPassword","StyleSheet","create","flex","alignItems","marginVertical","fontWeight","fontSize","color","textAlign"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,QAAwC,oBAAxC;AACA,OAAOC,QAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAEvC,kBAA0BN,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCR,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwBV,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOW,GAAP;AAAA,MAAYC,QAAZ;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEQT,QAAQ,CAACU,OAAT,CAAiBC,IAAjB,GAAwBC,0BAAxB,CAAmDT,KAAnD,EAA0DE,QAA1D,CAFR;;AAAA;AAETQ,YAAAA,QAFS;AAGfX,YAAAA,UAAU,CAACY,QAAX,CAAoB,KAApB;AAHe;AAAA;;AAAA;AAAA;AAAA;AAKfN,YAAAA,QAAQ,CAAC,YAAIO,OAAL,CAAR;;AALe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAUA,MAAMC,IAAI,GAAGC,OAAO,0BAApB;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGC,MAAM,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEH,IADV;AAEE,IAAA,KAAK,EAAI;AAAEI,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,MAAM,EAAE,KAAxB;AAA+BC,MAAAA,SAAS,EAAE;AAA1C,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAKJ,MAAM,CAACK,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCALF,EAME,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAGpB,KAHV;AAIE,IAAA,KAAK,EAAKe,MAAM,CAACM,GAJnB;AAKE,IAAA,YAAY,EAAE,sBAACC,QAAD;AAAA,aAAcrB,QAAQ,CAACqB,QAAD,CAAtB;AAAA,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAaE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAGpB,QAHV;AAIE,IAAA,KAAK,EAAKa,MAAM,CAACM,GAJnB;AAKE,IAAA,YAAY,EAAE,sBAACE,WAAD;AAAA,aAAiBpB,WAAW,CAACoB,WAAD,CAA5B;AAAA,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAoBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,KAAK,EAAKR,MAAM,CAACM,GAFnB;AAGE,IAAA,OAAO,EAAGf,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,CADF;AA+BD,CAjDD;;AAmDA,IAAMS,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE;AAFH,GADoB;AAM/BP,EAAAA,KAAK,EAAC;AACJQ,IAAAA,cAAc,EAAE,EADZ;AAEJC,IAAAA,UAAU,EAAE,KAFR;AAGJC,IAAAA,QAAQ,EAAE,EAHN;AAIJC,IAAAA,KAAK,EAAE,SAJH;AAKJC,IAAAA,SAAS,EAAE;AALP;AANyB,CAAlB,CAAf;AAeA,eAAelC,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, Image } from 'react-native';\nimport { Text, TextInput, Button } from 'react-native-paper';\nimport firebase from '../../firebase/fire.js';\n\nconst SignInScreen = ({ navigation }) => {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [err, setError] = useState('');\n\n  const signInUser = async() => {\n    try{\n      const response = await firebase.default.auth().signInWithEmailAndPassword(email, password);\n      navigation.navigate('App');\n    }catch(err) {\n      setError(err.message);\n    }\n\n  }\n\n  const logo = require('../../assets/logo.jpeg');\n\n  return(\n    <View style={ styles.container }>\n      <Image\n        source={logo}\n        style = {{ width: '40%', height: '20%', marginTop: 30 }}\n        />\n      <Text style = { styles.title }>BIENVENIDO ADMINISTRADOR</Text>\n      <TextInput\n        label=\"Correo\"\n        mode='outlined'\n        value={ email }\n        style = { styles.sep }\n        onChangeText={(newEmail) => setEmail(newEmail)}\n        />\n      <TextInput\n        label=\"Password\"\n        mode='outlined'\n        value={ password }\n        style = { styles.sep }\n        onChangeText={(newPassword) => setPassword(newPassword)}\n        />\n      <Button \n        mode=\"contained\" \n        style = { styles.sep }\n        onPress={ signInUser }\n        >\n        Ingresar\n      </Button>\n    </View>\n  );\n\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  title:{\n    marginVertical: 15,\n    fontWeight: '700',\n    fontSize: 32,\n    color: '#434343',\n    textAlign: 'center'\n  }\n});\n\nexport default SignInScreen;\n"]},"metadata":{},"sourceType":"module"}